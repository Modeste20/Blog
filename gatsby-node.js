const path = require("path")
const slugify = require('slugify')

exports.createPages = async ({ graphql, actions, reporter }) => {
  // Destructure the createPage function from the actions object
  const { createPage } = actions
  const result = await graphql(`
    query {
      allMdx {
        edges {
          node {
            id
            slug
            frontmatter {
              title
            }
          }
        }
      }
    }
  `)
  if (result.errors) {
    reporter.panicOnBuild('ðŸš¨  ERROR: Loading "createPages" query')
  }
  // Create blog post pages.
  const posts = result.data.allMdx.edges
  // you'll call `createPage` for each result
  posts.forEach(({ node }, index) => {
    createPage({
      // The slug generated by gatsby-plugin-mdx doesn't contain a slash at the beginning
      // You can prepend it with any prefix you want
      path: `/blog/${(node && node.frontmatter && node.frontmatter.title) ? slugify(node.frontmatter.title,{lower:true}) : node.slug}`,
      // This component will wrap our MDX content
      component: path.resolve(`src/components/BlogLayout/BlogLayout.js`),
      // You can use the values in this context in
      // our page layout component
      context: { id: node.id },
    })
  })
}